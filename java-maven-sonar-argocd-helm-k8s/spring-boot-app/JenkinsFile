pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Checkout') {
            steps {
                sh 'echo "Checkout stage passed"'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://44.204.41.35:9000/"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Check Docker Installation') {
            steps {
                script {
                    sh 'docker --version'
                }
            }
        }
        stage('Install Unzip') {
            steps {
                script {
                    sh '''
                        if ! [ -x "$(command -v unzip)" ]; then
                            echo "Installing unzip..."
                            apt-get update
                            apt-get install -y unzip
                        fi
                    '''
                }
            }
        }
        stage('AWS CLI Installation') {
            steps {
                script {
                    sh 'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_6
