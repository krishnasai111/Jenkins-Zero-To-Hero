pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        // Uncomment to enable repository checkout
        // git branch: 'main', url: 'https://github.com/krishnasai111/Jenkins-Zero-To-Hero.git'
        sh 'echo "Checkout stage passed"'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.52.254.49:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "440588537421.dkr.ecr.us-west-1.amazonaws.com/ultimate-cicd:${BUILD_NUMBER}" // Update with your ECR repository URI
      }
      steps {
        script {
            // Log in to AWS ECR
            withCredentials([[$class: 'AmazonWebServicesCredentials', credentialsId: 'aws-ecr-cred']]) {
                sh 'aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 440588537421.dkr.ecr.us-west-1.amazonaws.com'
            }
            
            // Build the Docker image
            sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
            
            // Push the Docker image to ECR
            sh "docker push ${DOCKER_IMAGE}"
        }
      }
    }
    stage('Update Deployment File') {
      environment {
          GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
          GIT_USER_NAME = "krishnasai111"
      }
      steps {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              sh '''
                  git config user.email "krishnasai.majji111@gmail.com"
                  git config user.name "KrishnaSai Majji"
                  BUILD_NUMBER=${BUILD_NUMBER}
                  sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                  git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                  git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                  git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
              '''
          }
      }
    }
  }
}
